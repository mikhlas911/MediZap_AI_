/*
  # Fix Walk-Ins Identity Column Issues

  1. Database Changes
    - Remove any default value from the id column if it's an identity column
    - Ensure the id column is properly configured as an identity column
    - Clean up any conflicting sequence configurations

  2. Security
    - Maintain existing RLS policies
    - Ensure proper auto-increment functionality
*/

-- First, check if the id column is an identity column and fix it if needed
DO $$
DECLARE
    is_identity boolean;
    has_sequence boolean;
BEGIN
    -- Check if id column is an identity column
    SELECT is_identity = 'YES' INTO is_identity
    FROM information_schema.columns 
    WHERE table_name = 'walk_ins' 
    AND column_name = 'id';

    -- Check if there's a sequence associated
    SELECT EXISTS(
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'walk_ins' 
        AND column_name = 'id' 
        AND column_default LIKE 'nextval%'
    ) INTO has_sequence;

    -- If it's not an identity column but has a sequence, convert it to identity
    IF NOT is_identity AND has_sequence THEN
        -- Drop the existing sequence default
        ALTER TABLE walk_ins ALTER COLUMN id DROP DEFAULT;
        
        -- Drop the sequence if it exists
        DROP SEQUENCE IF EXISTS walk_ins_id_seq CASCADE;
        
        -- Convert to identity column
        ALTER TABLE walk_ins ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY;
        
        RAISE NOTICE 'Converted id column to identity column';
    END IF;

    -- If it's not an identity column and has no sequence, make it identity
    IF NOT is_identity AND NOT has_sequence THEN
        ALTER TABLE walk_ins ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY;
        RAISE NOTICE 'Added identity to id column';
    END IF;

    -- If it already is an identity column, ensure no default is set
    IF is_identity THEN
        -- Remove any default value (this should not be needed for identity columns)
        BEGIN
            ALTER TABLE walk_ins ALTER COLUMN id DROP DEFAULT;
        EXCEPTION
            WHEN OTHERS THEN
                -- Ignore error if no default exists
                NULL;
        END;
        RAISE NOTICE 'Identity column is properly configured';
    END IF;
END $$;

-- Ensure the identity column starts from a reasonable value
-- Get the current max id and set the identity sequence accordingly
DO $$
DECLARE
    max_id bigint;
BEGIN
    SELECT COALESCE(MAX(id), 0) INTO max_id FROM walk_ins;
    
    -- Reset the identity sequence to start from max_id + 1
    PERFORM setval(pg_get_serial_sequence('walk_ins', 'id'), max_id + 1);
    
    RAISE NOTICE 'Identity sequence set to start from %', max_id + 1;
END $$;

-- Ensure RLS is enabled
ALTER TABLE walk_ins ENABLE ROW LEVEL SECURITY;

-- Grant necessary permissions on the table
GRANT SELECT, INSERT, UPDATE, DELETE ON walk_ins TO public;
GRANT SELECT, INSERT, UPDATE, DELETE ON walk_ins TO authenticated;